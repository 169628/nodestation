<!DOCTYPE html>
<html>
  <head>
    <%- include("layout/header")%>
    <title>笑話網 || 編輯會員</title>
  </head>
  <body>
    <div class="wrap">
      <%- include("layout/nav")%>
      <div class="update">
        <div id="app" class="main">
          <main_update></main_update>
        </div>
      </div>
    </div>

    <script type="text/x-template" id="main_template">
      <ul>
        <li>
          <label for="name">暱稱</label>
          <input type="text" name="name" id="name" v-model="name" />
        </li>
        <li>
          <label for="aboutMe">關於我</label>
          <input type="text" name="aboutMe" id="aboutMe" v-model="aboutMe" />
        </li>
        <li>
          <label for="mail">信箱</label>
          <input type="email" name="mail" id="mail" v-model="mail" />
        </li>
        <li>
          <p style="color: red">密碼至少6個字，只能使用英文大小寫、數字、與符號: !@#&%_</p>
        </li>
        <li>
          <label for="password">重設密碼</label>
          <input type="password" name="password" id="password" v-model="password" />
        </li>
        <li>
          <label for="repeatPassword">再一次輸入密碼</label>
          <input type="password" name="passwordAgain" id="passwordAgain" v-model="repeatPassword" />
        </li>
        <li>
          <button v-on:click="btn_update" class="my-button">
            <span class="btn"></span> 更新會員資訊
          </button>
        </li>
        <li>
          <button v-on:click="btn_delete_user" class="my-button"><span class="btn"></span> 刪除此帳號</button>
        </li>
      </ul>
    </script>

    <script>
      $(document).ready(() => {
        const login = localStorage.getItem("Authorization");
        if (login) {
          const token = {
            authorization: JSON.parse(localStorage.getItem("Authorization")),
          };
          axios
            .get("/api/user", { headers: token })
            .then((res) => {
              let user = res.data.data;
              const app = Vue.createApp().component("main_update", {
                data() {
                  return {
                    name: user.username,
                    mail: user.email,
                    password: "",
                    repeatPassword: "",
                    aboutMe: user.about_me,
                  };
                },
                methods: {
                  btn_update() {
                    const token = {
                      authorization: JSON.parse(
                        localStorage.getItem("Authorization")
                      ),
                    };
                    axios
                      .patch(
                        "/api/user",
                        {
                          name: this.name,
                          mail: this.mail,
                          password: this.password,
                          repeatPassword: this.repeatPassword,
                          aboutMe: this.aboutMe,
                        },
                        { headers: token }
                      )
                      .then((res) => {
                        if (res.status === 201) {
                          alert("更新成功");
                          location.reload();
                        }
                      })
                      .catch((err) => {
                        const message =
                          err.response.data.split("錯誤詳細描述")[0];
                        alert(message + "更新失敗，請重填!");
                        location.reload();
                      });
                  },
                  btn_delete_user() {
                    const token = {
                      authorization: JSON.parse(
                        localStorage.getItem("Authorization")
                      ),
                    };
                    axios
                      .delete("/api/user", { headers: token })
                      .then((res) => {
                        if (res.status === 204) {
                          localStorage.removeItem("articleId");
                          localStorage.removeItem("authorId");
                          localStorage.removeItem("Authorization");
                          localStorage.removeItem("userId");
                          alert("已刪除");
                          location.href = "/";
                        }
                      })
                      .catch((err) => {
                        const message =
                          err.response.data.split("錯誤詳細描述")[0];
                        alert(message + "刪除失敗，請洽管理員!");
                        location.reload();
                      });
                  },
                },
                template: "#main_template",
              });

              app.mount("#app");
            })
            .catch((err) => {
              const message = err.response.data.split("錯誤詳細描述")[0];
              alert(message + "錯誤");
              history.back();
            });
        } else {
          alert("請登入");
          location.href = "/login";
        }
      });
    </script>
  </body>
</html>
