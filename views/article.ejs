<!DOCTYPE html>
<html>
  <head>
    <%- include("layout/header")%>
    <title>首頁</title>
  </head>
  <body>
    <div class="wrap">
      <%- include("layout/nav")%>
      <div class="homepage">
        <div id="app" class="main">
          <main_article></main_article>
        </div>
      </div>
    </div>

    <script type="text/x-template" id="main_template">
      <div class="article">
        <div class="title">
          <h1>{{ title }}</h1>
          <template v-if="login" >
            <button  v-if="checkSave" v-on:click="btn_delete_save(articleId)" class="my-button bubbly-button">
              <span class="btn"></span> 刪除收藏
            </button>
            <button v-else v-on:click="btn_save(articleId)" class="my-button bubbly-button">
              <span class="btn"></span> 收藏
            </button>
          </template>
        </div>
        <p>{{ content }}</p>
      </div>
      <div class="author">
        <p>作者:</p>
        <a v-on:click="btn_author(authorId)" href="#">{{author}}</a>
      </div>
      <div class="score">
        <p>評分: {{score || 0}} 分</p>
        <button v-on:click="btn_score" class="my-button bubbly-button">
          <span class="btn"></span> 我要去評分
        </button>
      </div>
      <div class="comment">
        <div class="talk-bubble tri-right left-top">
          <div class="talktext">
            <p>留言</p>
            <ul>
              <template v-if="commentArray.length != 0">
                <li  v-for="item in commentArray">
                  <a v-on:click="btn_author(item.user_id)" href="#">{{item.username}}</a>
                  <p>{{item.content}}</p>
                </li>
              </template>
            </ul>
          </div>
        </div>
      </div>
    </script>

    <script>
      $(document).ready(async () => {
        const login = localStorage.getItem("Authorization");
        const articleId = localStorage.getItem("articleId");
        let saveList = [];
        if (login) {
          const token = {
            authorization: JSON.parse(localStorage.getItem("Authorization")),
          };
          const saveResult = await axios.get("/api/user/article", {
            headers: token,
          });
          saveList = saveResult.data.data.saved;
        }
        axios
          .get(`/api/article/one/${articleId}`)
          .then((res) => {
            const app = Vue.createApp().component("main_article", {
              data() {
                return {
                  login: login,
                  articleId: articleId,
                  saveList: saveList,
                  title: res.data.data.title,
                  content: res.data.data.content,
                  author: res.data.data.username,
                  authorId: res.data.data.user_id,
                  score: res.data.data.score,
                  commentArray:
                    res.data.data.comment.length == 0
                      ? []
                      : res.data.data.comment[0].comment,
                };
              },
              methods: {
                btn_author(authorId) {
                  localStorage.setItem("authorId", JSON.stringify(authorId));
                  location.href = "/author";
                },
                btn_score() {
                  location.href = "/score";
                },
                btn_save(articleId) {
                  const token = {
                    authorization: JSON.parse(
                      localStorage.getItem("Authorization")
                    ),
                  };
                  axios
                    .post(
                      `/api/user/article/${articleId}`,
                      {},
                      { headers: token }
                    )
                    .then((res) => {
                      alert("已收藏");
                      location.href = "/save";
                    });
                },
                btn_delete_save(articleId) {
                  const token = {
                    authorization: JSON.parse(
                      localStorage.getItem("Authorization")
                    ),
                  };
                  axios
                    .delete(`/api/user/article/${articleId}`, {
                      headers: token,
                    })
                    .then((res) => {
                      alert("已刪除");
                      location.href = "/save";
                    });
                },
              },
              computed: {
                checkSave() {
                  return this.saveList.some((item) => {
                    return item._id == this.articleId;
                  });
                },
              },
              template: "#main_template",
            });
            app.mount("#app");
          })
          .catch((err) => {
            const message = err.response.data.split("錯誤詳細描述")[0];
            alert(message + "錯誤");
            history.back();
          });
      });
    </script>
  </body>
</html>
